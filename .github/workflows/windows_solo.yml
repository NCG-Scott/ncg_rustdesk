 name: Windows x64 Build (NCG defaults - Solo)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v1.4.1-ncg1). Leave blank to skip release."
        required: false
        default: ""
  push:
    branches: [ master ]
    paths:
      - ".github/workflows/windows_solo.yml"
      - "force-run.txt"

permissions:
  contents: write

env:
  RUST_VERSION: "1.75"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"

jobs:
  windows-x64:
    name: x86_64-pc-windows-msvc
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy,rustfmt

      - name: Setup LLVM (primary)
        id: llvm
        uses: KyleMayes/install-llvm-action@v2
        continue-on-error: true
        with:
          version: ${{ env.LLVM_VERSION }}
          directory: C:\llvm

      - name: "Fallback: install LLVM via Chocolatey"
        if: ${{ steps.llvm.outcome != 'success' }}
        shell: pwsh
        run: |
          choco install -y llvm --version=${{ env.LLVM_VERSION }}
          echo "$env:ProgramFiles\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          if (!(Test-Path 'C:\llvm')) { New-Item -ItemType Junction -Path 'C:\llvm' -Target "$env:ProgramFiles\LLVM" | Out-Null }
          clang --version

      - name: Setup vcpkg
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          echo "VCPKG_ROOT=C:\vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Ensure Cargo sees VCPKG env
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force .cargo | Out-Null
          $cfg = "[env]`r`nVCPKG_ROOT = `"C:\\vcpkg`"`r`nVCPKG_DEFAULT_TRIPLET = `"x64-windows-static`"`r`n"
          Set-Content -Path .cargo\config.toml -Value $cfg -Encoding UTF8
          Get-Content .cargo\config.toml

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Enable long paths
        run: git config --system core.longpaths true
        shell: pwsh

      - name: Build Windows (Flutter + Rust)
        shell: pwsh
        run: |
          python --version
          python build.py --flutter

      - name: Build MSI
        shell: pwsh
        run: |
          msbuild .\res\msi\Package\Package.wixproj /p:Configuration=Release /p:Platform=x64
          New-Item -ItemType Directory -Force -Path .\Out | Out-Null
          Get-ChildItem res\msi\Package\bin\Release\*.msi | Copy-Item -Destination .\Out\
          if (Test-Path .\rustdesk-*.exe) { Copy-Item .\rustdesk-*.exe .\Out\ }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-x64
          path: Out\*

      - name: Create release (optional)
        if: ${{ github.event.inputs.tag != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: Out\*
          prerelease: false
       
